package com.ventanas;

import FiveCodMover.FiveCodMoverJFrame;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Image;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;

/**
 *
 * @author Dainer Cortés
 * @version 1.0
 */
public class VentanaJuego extends javax.swing.JFrame {

    private boolean casilla[][] = new boolean[3][3];
    private String turno = "jugador1";
    private int matriz[][] = new int[3][3];
    private String jugador1, jugador2;
    private int vecesGano1, vecesGano2, vecesEmpate;
    
    /**
     * El metodo contrucotr recibe varios parametros e inicializa
     * algunos metodos de la clase
     * @param jugador1
     * @param jugador2 
     */
    public VentanaJuego(String jugador1, String jugador2) {      
        this.jugador1 = jugador1;
        this.jugador2 = jugador2;
        
        initComponents();  
        
        this.getContentPane().setBackground(Color.decode("#333333"));
        this.setLocationRelativeTo(null);
        this.llenarCasillas();
        this.llenarMatriz();   
    }

    
    /**
     * Metodo para llenar las casillas de la cuadricula
     */
    private void llenarCasillas(){
        try {
            for (int i = 0; i < 3; i++) {
                for (int j = 0; j < 3; j++) {
                    this.casilla[i][j] = true;
                }
            }
        } catch (Exception e) {
            e.getMessage();
        }
    }
    
    /**
     * Metodo para llenar la matriz que simula la cuadricula
     */
    private void llenarMatriz(){
        try {
            for (int i = 0; i < 3; i++) {
                for (int j = 0; j < 3; j++) {
                    this.matriz[i][j] = 0;
                }
            }
        } catch (Exception e) {
            e.getMessage();
        }      
    }
    
    /**
     * Metodo para dibujar el icino de X cuando el jugador lo presione
     * @param boton 
     */
    private void dibujarX(JButton boton) {  
        try {
            boton.setIcon(new ImageIcon(getClass().getResource("/com/img/x.png")));
        } catch (Exception e) {
            e.getMessage();
        }
    }
    
    /**
     * Metodo para dibujar el icino de O cuando el jugador lo presione
     * @param boton 
     */
    private void dibujarO(JButton boton) {
        try {
            boton.setIcon(new ImageIcon(getClass().getResource("/com/img/o.png")));         
        } catch (Exception e) {
            e.getMessage();
        }
    }
    
    /**
     * Este metodo valida que casilla se selecciono y si esta disponible coloca el icono del jugador
     * @param btn
     * @param posY
     * @param posX 
     */
    private void ColocarEleccionJugador(JButton btn, int posY, int posX) {
        try {
            if(casilla[posY][posX]) {
                if(this.turno.equals("jugador1")) { //Turno jugador uno
                    this.dibujarX(btn);
                    this.matriz[posY][posX] = 1;
                    this.turno = "jugador2";
                } else { //Turno jugador dos
                    this.dibujarO(btn);
                    this.matriz[posY][posX] = 2;
                    this.turno = "jugador1";
                }

                casilla[posY][posX] = false;
                this.comprobarGanador();
            } 
        } catch (Exception e) {
            e.getMessage();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        lblMinimizar = new javax.swing.JLabel();
        lblCerrar = new javax.swing.JLabel();
        panel = new javax.swing.JPanel();
        btn0_0 = new javax.swing.JButton();
        btn0_1 = new javax.swing.JButton();
        btn0_2 = new javax.swing.JButton();
        btn1_0 = new javax.swing.JButton();
        btn1_1 = new javax.swing.JButton();
        btn1_2 = new javax.swing.JButton();
        btn2_0 = new javax.swing.JButton();
        btn2_1 = new javax.swing.JButton();
        btn2_2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblJugador2 = new javax.swing.JLabel();
        lblX = new javax.swing.JLabel();
        lblO = new javax.swing.JLabel();
        lblJugador1 = new javax.swing.JLabel();
        lblOpciones = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));
        setMaximumSize(new java.awt.Dimension(430, 560));
        setMinimumSize(new java.awt.Dimension(430, 560));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(430, 560));
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(filler1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, -1, -1));

        lblMinimizar.setFont(new java.awt.Font("Harrington", 0, 55)); // NOI18N
        lblMinimizar.setForeground(new java.awt.Color(255, 119, 0));
        lblMinimizar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMinimizar.setText("•");
        lblMinimizar.setToolTipText("");
        lblMinimizar.setFocusable(false);
        lblMinimizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblMinimizar.setMaximumSize(new java.awt.Dimension(22, 35));
        lblMinimizar.setMinimumSize(new java.awt.Dimension(22, 35));
        lblMinimizar.setPreferredSize(new java.awt.Dimension(22, 35));
        lblMinimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblMinimizarMousePressed(evt);
            }
        });
        jPanel2.add(lblMinimizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 30, 30));

        lblCerrar.setFont(new java.awt.Font("Harrington", 0, 55)); // NOI18N
        lblCerrar.setForeground(new java.awt.Color(255, 0, 0));
        lblCerrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCerrar.setText("•");
        lblCerrar.setToolTipText("");
        lblCerrar.setFocusable(false);
        lblCerrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblCerrar.setMaximumSize(new java.awt.Dimension(22, 35));
        lblCerrar.setMinimumSize(new java.awt.Dimension(22, 35));
        lblCerrar.setPreferredSize(new java.awt.Dimension(22, 35));
        lblCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblCerrarMousePressed(evt);
            }
        });
        jPanel2.add(lblCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 30, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 30));

        panel.setBackground(new java.awt.Color(51, 51, 51));
        panel.setMaximumSize(new java.awt.Dimension(300, 300));
        panel.setMinimumSize(new java.awt.Dimension(300, 300));
        panel.setPreferredSize(new java.awt.Dimension(300, 300));
        panel.setLayout(new java.awt.GridLayout(3, 3));

        btn0_0.setBackground(new java.awt.Color(51, 51, 51));
        btn0_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btn0_0.setContentAreaFilled(false);
        btn0_0.setFocusPainted(false);
        btn0_0.setFocusable(false);
        btn0_0.setMaximumSize(new java.awt.Dimension(72, 70));
        btn0_0.setMinimumSize(new java.awt.Dimension(72, 70));
        btn0_0.setPreferredSize(new java.awt.Dimension(72, 70));
        btn0_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0_0ActionPerformed(evt);
            }
        });
        panel.add(btn0_0);

        btn0_1.setBackground(new java.awt.Color(51, 51, 51));
        btn0_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btn0_1.setContentAreaFilled(false);
        btn0_1.setFocusPainted(false);
        btn0_1.setFocusable(false);
        btn0_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0_1ActionPerformed(evt);
            }
        });
        panel.add(btn0_1);

        btn0_2.setBackground(new java.awt.Color(51, 51, 51));
        btn0_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btn0_2.setContentAreaFilled(false);
        btn0_2.setFocusPainted(false);
        btn0_2.setFocusable(false);
        btn0_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0_2ActionPerformed(evt);
            }
        });
        panel.add(btn0_2);

        btn1_0.setBackground(new java.awt.Color(51, 51, 51));
        btn1_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btn1_0.setContentAreaFilled(false);
        btn1_0.setFocusPainted(false);
        btn1_0.setFocusable(false);
        btn1_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1_0ActionPerformed(evt);
            }
        });
        panel.add(btn1_0);

        btn1_1.setBackground(new java.awt.Color(51, 51, 51));
        btn1_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btn1_1.setContentAreaFilled(false);
        btn1_1.setFocusPainted(false);
        btn1_1.setFocusable(false);
        btn1_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1_1ActionPerformed(evt);
            }
        });
        panel.add(btn1_1);

        btn1_2.setBackground(new java.awt.Color(51, 51, 51));
        btn1_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btn1_2.setContentAreaFilled(false);
        btn1_2.setFocusPainted(false);
        btn1_2.setFocusable(false);
        btn1_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1_2ActionPerformed(evt);
            }
        });
        panel.add(btn1_2);

        btn2_0.setBackground(new java.awt.Color(51, 51, 51));
        btn2_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btn2_0.setContentAreaFilled(false);
        btn2_0.setFocusPainted(false);
        btn2_0.setFocusable(false);
        btn2_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2_0ActionPerformed(evt);
            }
        });
        panel.add(btn2_0);

        btn2_1.setBackground(new java.awt.Color(51, 51, 51));
        btn2_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btn2_1.setContentAreaFilled(false);
        btn2_1.setFocusPainted(false);
        btn2_1.setFocusable(false);
        btn2_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2_1ActionPerformed(evt);
            }
        });
        panel.add(btn2_1);

        btn2_2.setBackground(new java.awt.Color(51, 51, 51));
        btn2_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        btn2_2.setContentAreaFilled(false);
        btn2_2.setFocusPainted(false);
        btn2_2.setFocusable(false);
        btn2_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2_2ActionPerformed(evt);
            }
        });
        panel.add(btn2_2);

        getContentPane().add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 200, 300, 300));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setMaximumSize(new java.awt.Dimension(0, 124));
        jPanel1.setMinimumSize(new java.awt.Dimension(0, 124));
        jPanel1.setPreferredSize(new java.awt.Dimension(0, 124));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblJugador2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblJugador2.setForeground(new java.awt.Color(255, 255, 255));
        lblJugador2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblJugador2.setText("Jugador 2");
        jPanel1.add(lblJugador2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 124, -1));
        lblJugador2.setText(jugador2);

        lblX.setBackground(new java.awt.Color(51, 51, 51));
        lblX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/x_min.png"))); // NOI18N
        jPanel1.add(lblX, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, -1, -1));

        lblO.setBackground(new java.awt.Color(51, 51, 51));
        lblO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/o_min.png"))); // NOI18N
        jPanel1.add(lblO, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, -1, -1));

        lblJugador1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblJugador1.setForeground(new java.awt.Color(255, 255, 255));
        lblJugador1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblJugador1.setText("Jugador 1");
        lblJugador1.setText(jugador1);
        jPanel1.add(lblJugador1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 124, -1));

        lblOpciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/settings.png"))); // NOI18N
        lblOpciones.setText("jLabel1");
        lblOpciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblOpcionesMousePressed(evt);
            }
        });
        jPanel1.add(lblOpciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, 40, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 190));

        pack();
    }// </editor-fold>//GEN-END:initComponents

 
    private void btn0_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0_0ActionPerformed
        this.ColocarEleccionJugador(this.btn0_0, 0, 0);      
    }//GEN-LAST:event_btn0_0ActionPerformed

    private void btn0_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0_1ActionPerformed
        this.ColocarEleccionJugador(this.btn0_1, 0, 1);       
    }//GEN-LAST:event_btn0_1ActionPerformed

    private void btn0_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0_2ActionPerformed
        this.ColocarEleccionJugador(this.btn0_2, 0, 2);        
    }//GEN-LAST:event_btn0_2ActionPerformed

    private void btn1_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1_0ActionPerformed
        this.ColocarEleccionJugador(this.btn1_0, 1, 0);        
    }//GEN-LAST:event_btn1_0ActionPerformed

    private void btn1_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1_1ActionPerformed
        this.ColocarEleccionJugador(this.btn1_1, 1, 1);
    }//GEN-LAST:event_btn1_1ActionPerformed

    private void btn1_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1_2ActionPerformed
        this.ColocarEleccionJugador(this.btn1_2, 1, 2);
    }//GEN-LAST:event_btn1_2ActionPerformed

    private void btn2_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2_0ActionPerformed
        this.ColocarEleccionJugador(this.btn2_0, 2, 0);
    }//GEN-LAST:event_btn2_0ActionPerformed

    private void btn2_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2_1ActionPerformed
        this.ColocarEleccionJugador(this.btn2_1, 2, 1);
    }//GEN-LAST:event_btn2_1ActionPerformed

    private void btn2_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2_2ActionPerformed
        this.ColocarEleccionJugador(this.btn2_2, 2, 2);
    }//GEN-LAST:event_btn2_2ActionPerformed

    /**
     * Este evento permite mover el formulario en toda la pantalla mediante una libreria
     * @param evt 
     */
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        FiveCodMoverJFrame.MousePressed(evt);
    }//GEN-LAST:event_formMousePressed

    /**
     * Este evento permite mover el formulario en toda la pantalla mediante una libreria
     * @param evt 
     */
    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        FiveCodMoverJFrame.MouseDraggedFrame(evt, this);
    }//GEN-LAST:event_formMouseDragged

    /**
     * Abre la ventana de Opciones
     * @param evt 
     */
    private void lblOpcionesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOpcionesMousePressed
        VentanaOpciones vto = new VentanaOpciones(this, true, this.jugador1, this.jugador2, this.vecesGano1, this.vecesGano2, this.vecesEmpate);
        vto.setVisible(true);
    }//GEN-LAST:event_lblOpcionesMousePressed

    /**
     * Finaliza la ejecución del programa
     * @param evt 
     */
    private void lblCerrarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCerrarMousePressed
        System.exit(0);
    }//GEN-LAST:event_lblCerrarMousePressed

    /**
     * Minimiza la ventana
     * @param evt 
     */
    private void lblMinimizarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizarMousePressed
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_lblMinimizarMousePressed

    /**
     * Abre la ventana que muestra el ganador
     * @param jugador 
     */
    private void AbrirVentanaGanador(String jugador) {
        VentanaGanador vtg = new VentanaGanador(this, true, jugador);
        vtg.setVisible(true);
        this.reiniciarJuego();
    }
    /**
     * Este metodo comprueba cual de los dos jugadores gano
     */
    private void comprobarGanador() {
        try {
            boolean ganador1 = false;
            boolean ganador2  = false;
            int casillasEmpate = 0;

            ganador1 = comprobar(1);
            ganador2 = comprobar(2);

            if(ganador1) {
                this.vecesGano1++;
                this.AbrirVentanaGanador(jugador1);
            } else if (ganador2) {
                this.vecesGano2++;
                this.AbrirVentanaGanador(jugador2);
            } else {            
                for (int i = 0; i < 3; i++) {
                    for (int j = 0; j < 3; j++) {
                        if(matriz[i][j] != 0) {
                            casillasEmpate++;
                        }
                    }
                }
                if(casillasEmpate == 9) {
                    this.vecesEmpate++;
                    VentanaEmpate vte = new VentanaEmpate(this, true);
                    vte.setVisible(true);
                    this.reiniciarJuego();
                } else {
                    casillasEmpate = 0;
                }
            }
        } catch (Exception e) {
            e.getMessage();
        }  
    }   
    
    /**
     * Este metodo comprueba si el jugador realizo alguna combinación ganadora
     * si es asi entonces retorna quien gano
     * @param num
     * @return 
     */
    private boolean comprobar(int num) {
        boolean ganador = false;
        
        //Comprobar combinaciones verticales
        if(this.matriz[0][0] == num && this.matriz[0][1] == num && this.matriz[0][2] == num) {
            ganador = true;
        } else if(this.matriz[1][0] == num && this.matriz[1][1] == num && this.matriz[1][2] == num) {
            ganador = true;
        } else if(this.matriz[2][0] == num && this.matriz[2][1] == num && this.matriz[2][2] == num) {
            ganador = true;
        }
        //Comprobar combinaciones horizontales
        else if(this.matriz[0][0] == num && this.matriz[1][0] == num && this.matriz[2][0] == num) {
            ganador = true;
        } else if(this.matriz[0][1] == num && this.matriz[1][1] == num && this.matriz[2][1] == num) {
            ganador = true;
        } else if(this.matriz[0][2] == num && this.matriz[1][2] == num && this.matriz[2][2] == num) {
            ganador = true;
        }
        //Comprobar combianciones diagonales
        else if(this.matriz[0][0] == num && this.matriz[1][1] == num && this.matriz[2][2] == num) {
            ganador = true;
        } else if(this.matriz[0][2] == num && this.matriz[1][1] == num && this.matriz[2][0] == num) {
            ganador = true;
        }
        
        return ganador;
    }
    
    /**
     * Metodo que reinicia los puntos del juego
     */
    public void reiniciarPuntos() {
        this.vecesGano1 = 0; 
        this.vecesGano2 = 0; 
        this.vecesEmpate  = 0;
    }
    
    /**
     * Metodo que reinicia el juego por completo
     */
    public void reiniciarJuego() {
        this.llenarCasillas();
        this.llenarMatriz();
        
        this.btn0_0.setIcon(null);
        this.btn0_1.setIcon(null);
        this.btn0_2.setIcon(null);
        this.btn1_0.setIcon(null);
        this.btn1_1.setIcon(null);
        this.btn1_2.setIcon(null);
        this.btn2_0.setIcon(null);
        this.btn2_1.setIcon(null);
        this.btn2_2.setIcon(null);
        
        this.quienJuegaPrimero();
    }
    
    /**
     * Metodo que abre la ventana para elegir quien lanza el primer turno
     */
    private void quienJuegaPrimero() {
        VentanaEscogerTurno vet = new VentanaEscogerTurno(this, true, this.jugador1, this.jugador2);
        vet.setVisible(true);
        this.turno = vet.getTurno();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaJuego(null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn0_0;
    private javax.swing.JButton btn0_1;
    private javax.swing.JButton btn0_2;
    private javax.swing.JButton btn1_0;
    private javax.swing.JButton btn1_1;
    private javax.swing.JButton btn1_2;
    private javax.swing.JButton btn2_0;
    private javax.swing.JButton btn2_1;
    private javax.swing.JButton btn2_2;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblCerrar;
    private javax.swing.JLabel lblJugador1;
    private javax.swing.JLabel lblJugador2;
    private javax.swing.JLabel lblMinimizar;
    private javax.swing.JLabel lblO;
    private javax.swing.JLabel lblOpciones;
    private javax.swing.JLabel lblX;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
